<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAA
        CAAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABIAEAASABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAGA
        AwABIAMAAQEBAAEgBgABQP8A/wD/AP8AxgADBwEJAzQBdQMgAc8DBQH4AwUB+AMgAc8DNAF1AwcBCf8A
        3QADFwEhAx0B1QMuAasDJQE6AwYBCAMGAQgDJQE6Ay4BqgMcAdYDFwEh/wDVAAMNARIDGAHcAzMBbAMd
        ASsDLAGzAwgB9AMIAfQDLAGzAx0BKwMzAWwDGAHcAw0BEv8A0QADLwGmAzQBjgMjATcDCgHyAwAB/wMA
        Af8DAAH/AwAB/wMKAfIDIwE3AzQBjgMvAab/AM0AAyQBOAMWAeADDwEVAxYB4AMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wMWAeADDwEUAxYB4AMkATj/ADEAAwMBBAMwAaMDMAGkAzABpAMwAaQDMAGkAzABpAMw
        AaMDEAEWAzQBdQMtAa4DLgGrAy4BqwMuAasDLgGrAy4BqwMuAasDLgGrAy4BqwMuAasDLgGrAy4BqwMu
        AasDLgGrAzIBmwMAAQEwAAMtAa0DMgFoAzQBewMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AzQBewMyAWcDLQGt/wAxAAMKAQ4DMgGYHAADLgGpOAADMwGVAw8BFSwAAw8BFQMNAe4DDAEQAxIB5wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AxIB5wMMARADCgHyAwAB/wMOAewDLAFO/wApAAMu
        AasDAQECGAADMAGjAwUBBzQAAy4BrDAAAzIBYwMvAacDHwEuAwAB/gMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/gMfBC8BpwMsAbMDKgFHAx0B1AMAAQH/ACUAAzEBXgMxAWAYAAMwAVwDLwFW
        MAADGAEiAzMBkDAAAy4BqQMxAV0wAAMxAV4DCQHzAwQBBgMfAdADKgFH/wAoAAEBAzABpAMjATcUAAMF
        AQcDKgG2AwYBCCwAAzABogMZASMwAAMTAeQDFwEgMAADFwEhAwAB/wMnAUADMQGdAzMBcf8AKQADBgEI
        AzIBmgM0AXsDDQESCwABAQMbASgDJwE/AzEBnAMBAQIkAAMzAWwDMwFwMAADEQEXAw4B7DgAAw0B7QMA
        Af8DGQHbAxIBGf8AMQADJQE8AzIBmQMvAaUDMAGjAy8BpgMzAW8EAAMuAVQDMAGkAw0BEhgAAwQBBQM0
        AYMDNAGCNAADJwFAAyUBwjgAAyYBwwMnAUD/AD0AAwoBDQMxAV8DNAFzAyIBNAwAAx8BLgMtAa4DNAGH
        AyUBOgMPARQDDAEQAx8BLwM0AXMDKwG1AywBTDgAAzIBYQMwAaIDAgEDAwIBAwMCAQMDAgEDAwIBAwMC
        AQMDAgEDAwIBAwMCAQMDAgEDAwIBAwMCAQMDAgEDAwIBAwMwAaIDMgFh/wA5AAMZASQDLAGyAysBSwMh
        ATIDNAGEAzQBgBAAAx4BLQM0AXIDMgGWAzIBmgM0AX0DJwE/AwEBAjwAAyYBPgMGAfYDAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMGAfcDJwE//wA5AAMw
        AaQDDgETDAADNAGFAyEBMhAAAwEBAgMdASoDIQEyAwUBB/8AxQADMAGkEAADIwE2AzMBbwwAAykBQwMs
        AbEDNAF8AzQBcwMuAaoDMgFoXAADLAFOAzABWgMwAVoDCQEM/wBVAAMuAaoQAAMtAVADMAFaCAADIQEy
        AzEBngMDAQQMAAM0AXMDMgFhWAADMwFtAzMBjAMzAYwDFgEf/wBVAAMzAW0DMgFnCAADEQEXAywBswMI
        AQsIAAMxAaEDCgEOFAADLQGuAwABAVQAAwcBCgM0AX4DNAF+AzQBdP8AWQADMwFsAy4BqgMvAaUDMQGh
        AxcBIAwAAzABpBgAAzQBiwMSARlUAAMOARMDLgFTAy4BUwMoAUH/AHkAAy8BpxgAAzIBmgMKAQ3/AN0A
        AzQBgQMkATkQAAMPARQDLwGl/wDhAAMHAQoDLQGuAykBRAgAAxwBKQMsAbEDGAEi/wDlAAMGAQgDNAFy
        Ay8BpgMvAaUDNAGIAxABFv8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/ALMAAUIBTQE+BwABPgMA
        ASgDAAGAAwABIAMAAQEBAAEBBgABAhYAA/8BAAj/CAAI/wgABf8B8AEPAf8IAAX/AeABBwH/CAAF/wHA
        AQMB/wgABf8BwAEDAf8IAAX/AYABAQH/CAAB4AIAAQcB/wGAAQEB/wgAAecB9wH/AecB/wIAAT8IAALz
        Af8B7wH/AgABHwgAAvMB/wHPAf8BPwH8AR8IAALxAf8BzwH/AT8B/AEfCAAB+AFgAf8BnwH+AX8B/gEf
        CAAB/gEEAX4BPwH+AX8B/gF/CAAB/wEOAQABfwH+AgABfwgAAf4BBwGAAf8B/gIAAX8IAAH+AXMBwwX/
        CAAB/gHzAYEC/wH8AT8B/wgAAf4B8wEcAv8B/AE/Af8IAAH+AWMBPgF/Af8B/AE/Af8IAAH/AQcBfgF/
        Af8B/AE/Af8IAAL/AX4BfwT/CAAC/wE8Bf8IAAL/ARgF/wgAAv8BgQX/CAAI/wgACP8IAAj/CAAI/wgA
        CP8IAAj/CAAI/wgACw==
</value>
  </data>
</root>